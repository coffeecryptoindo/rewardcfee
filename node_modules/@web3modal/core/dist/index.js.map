{"version":3,"file":"index.js","sources":["../src/controllers/OptionsCtrl.ts","../src/controllers/ClientCtrl.ts","../src/utils/CoreConstants.ts","../src/utils/CoreHelpers.ts","../src/controllers/ConfigCtrl.ts","../src/utils/ExplorerApi.ts","../src/controllers/ExplorerCtrl.ts","../src/controllers/RouterCtrl.ts","../src/controllers/ModalCtrl.ts","../src/controllers/ToastCtrl.ts","../src/utils/PolyfillUtil.ts"],"sourcesContent":["import { proxy } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChainId: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined,\n  isStandalone: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isExplorer: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  setSelectedChainId(selectedChainId: OptionsCtrlState['selectedChainId']) {\n    state.selectedChainId = selectedChainId\n  },\n\n  setIsStandalone(isStandalone: OptionsCtrlState['isStandalone']) {\n    state.isStandalone = isStandalone\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsExplorer(isExplorer: OptionsCtrlState['isExplorer']) {\n    state.isExplorer = isExplorer\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ClientCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ClientCtrlState>({\n  initialized: false,\n  ethereumClient: undefined\n})\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    if (!state.initialized && ethereumClient) {\n      state.ethereumClient = ethereumClient\n      OptionsCtrl.setChains(ethereumClient.chains)\n      state.initialized = true\n    }\n  },\n\n  client() {\n    if (state.ethereumClient) {\n      return state.ethereumClient\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","export const WALLETCONNECT_DEEPLINK_CHOICE = 'WALLETCONNECT_DEEPLINK_CHOICE'\n","import { WALLETCONNECT_DEEPLINK_CHOICE } from './CoreConstants'\n\nexport const CoreHelpers = {\n  isCoinbaseExtension() {\n    return window.coinbaseWalletExtension\n  },\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string) {\n    const plainAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}://wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string) {\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) {\n      plainAppUrl = appUrl.slice(0, -1)\n    }\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target = '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreHelpers } from '../utils/CoreHelpers'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: undefined,\n  themeMode: isDarkMode() ? 'dark' : 'light',\n  themeColor: 'default',\n  themeBackground: CoreHelpers.isMobile() ? 'themeColor' : 'gradient',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  standaloneChains: undefined,\n  enableStandaloneMode: false,\n  enableNetworkView: true\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    OptionsCtrl.setIsStandalone(\n      Boolean(config.standaloneChains?.length) || Boolean(config.enableStandaloneMode)\n    )\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setIsExplorer(Boolean(config.projectId?.length))\n\n    Object.assign(state, config)\n  },\n\n  setThemeConfig(theme: Pick<ConfigCtrlState, 'themeBackground' | 'themeColor' | 'themeMode'>) {\n    Object.assign(state, theme)\n  }\n}\n","import type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nexport const EXPLORER_API = 'https://explorer-api.walletconnect.com'\n\nexport function formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport async function fetchWallets(\n  projectId: string,\n  params: PageParams\n): Promise<ListingResponse> {\n  const urlParams = formatParams(params)\n  const fetcUrl = `${EXPLORER_API}/v3/wallets?projectId=${projectId}&${urlParams}`\n  const fetched = await fetch(fetcUrl)\n\n  return fetched.json()\n}\n\nexport function formatImageUrl(projectId: string, imageId: string) {\n  return `${EXPLORER_API}/v2/logo/lg/${imageId}?projectId=${projectId}`\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { fetchWallets, formatImageUrl } from '../utils/ExplorerApi'\nimport { ConfigCtrl } from './ConfigCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- helpers ------------------------------------------------------ //\nfunction getProjectId() {\n  const { projectId } = ConfigCtrl.state\n  if (!projectId) {\n    throw new Error('projectId is required to work with explorer api')\n  }\n\n  return projectId\n}\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await fetchWallets(getProjectId(), params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await fetchWallets(getProjectId(), { page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await fetchWallets(getProjectId(), params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getImageUrl(imageId: string) {\n    return formatImageUrl(getProjectId(), imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  open(options?: { uri: string; standaloneChains?: string[] }) {\n    const { chains } = OptionsCtrl.state\n    const { enableNetworkView } = ConfigCtrl.state\n    const isChainsList = chains?.length && chains.length > 1\n\n    if (isChainsList && enableNetworkView) {\n      RouterCtrl.replace('SelectNetwork')\n    } else {\n      RouterCtrl.replace('ConnectWallet')\n    }\n\n    if (typeof options?.uri === 'string') {\n      OptionsCtrl.setStandaloneUri(options.uri)\n    }\n    if (options?.standaloneChains?.length) {\n      OptionsCtrl.setStandaloneChains(options.standaloneChains)\n    }\n\n    state.open = true\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n}\n"],"names":["state","proxy","OptionsCtrl","chains","standaloneChains","standaloneUri","selectedChainId","isStandalone","isCustomDesktop","isCustomMobile","isExplorer","ClientCtrl","ethereumClient","WALLETCONNECT_DEEPLINK_CHOICE","CoreHelpers","value","appUrl","wcUri","name","plainAppUrl","encodedWcUrl","miliseconds","resolve","href","target","isDarkMode","ConfigCtrl","callback","valtioSub","config","_a","_b","_c","_d","theme","EXPLORER_API","formatParams","params","stringParams","_","key","fetchWallets","projectId","urlParams","fetcUrl","formatImageUrl","imageId","getProjectId","ExplorerCtrl","listings","page","search","listingsObj","total","type","RouterCtrl","view","data","last","ModalCtrl","options","enableNetworkView","ToastCtrl","message","variant","Buffer"],"mappings":"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"}